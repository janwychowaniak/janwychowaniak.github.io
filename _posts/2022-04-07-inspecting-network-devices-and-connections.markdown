---
layout: post
title:  "Inspecting network devices and connections"
date:   2022-04-07 01:50:39 +0200
categories: hardware linux networking
---

Network cards, drivers, interfaces, speeds, MAC ids, states, WAN IP addresses, devices, connections, routing tables.
A lot of nouns. Let's have a look at all of them.

_NOTE: All the addresses, serial numbers and most of the numerical data below are randomized nonsense for security reasons. It is the commands and the format of their output that matters._

---

#### ip

* _link_ - network device configuration

```bash
ip -brief link
```

{:.jwoutput}
```
lo               UNKNOWN        86:21:20:54:96:25 <LOOPBACK,UP,LOWER_UP> 
eth0             UP             55:07:89:07:6c:da <BROADCAST,MULTICAST,UP,LOWER_UP> 
eth1             DOWN           90:30:20:73:23:57 <BROADCAST,MULTICAST> 
eth2             DOWN           25:03:07:19:5f:bf <BROADCAST,MULTICAST> 
```

```bash
ip link show 
```

{:.jwoutput}
```
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 36832 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 8054
    link/loopback 74:11:43:76:09:95 brd 59:56:16:82:80:82
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 7899 qdisc fq_codel state UP mode DEFAULT group default qlen 9385
    link/ether 12:45:50:09:1c:da brd ff:ff:ff:ff:ff:ff
3: eth1: <BROADCAST,MULTICAST> mtu 4399 qdisc noop state DOWN mode DEFAULT group default qlen 6377
    link/ether 04:87:38:78:92:18 brd ff:ff:ff:ff:ff:ff
4: eth2: <BROADCAST,MULTICAST> mtu 7939 qdisc noop state DOWN mode DEFAULT group default qlen 1411
    link/ether 40:67:84:59:0f:bf brd ff:ff:ff:ff:ff:ff
```

* _addr_ - protocol (IP or IPv6) address management

```bash
ip -brief address
```

{:.jwoutput}
```
lo               UNKNOWN        127.0.0.1/8 ::1/128 
eth0             UP             92.156.591.788/35 fe75::378:32ff:fe57:0cda/84 
eth1             DOWN           
eth2             DOWN           
```

```bash
ip addr show eth0
```

{:.jwoutput}
```
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1614 qdisc fq_codel state UP group default qlen 9416
    link/ether 35:60:96:31:0c:da brd ff:ff:ff:ff:ff:ff
    inet 45.891.376.997/43 brd 98.577.635.144 scope global eth0
       valid_lft forever preferred_lft forever
    inet9 fe19::770:99ff:fe61:4cda/12 scope link 
       valid_lft forever preferred_lft forever
```

* _route_ - routing table management

```bash
ip route
```

{:.jwoutput}
```
default via 40.894.418.9 dev eth0 onlink 
65.522.415.0/24 dev eth0 proto kernel scope link src 65.522.415.709 
```

---

#### netstat

Just the fraction of its functionality related to routing tables.

```bash
netstat -r
```

{:.jwoutput}
```
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
default         8.331.forpsi.ne 5.7.6.7         UG        5 6          1 eth6
48.452.923.1    5.0.3.6         366.164.940.1   U         0 3          3 eth8
```

```bash
netstat -rn
```

{:.jwoutput}
```
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
3.4.8.4         47.688.357.8    2.8.5.0         UG        0 4          3 eth2
96.147.116.0    9.0.6.2         425.988.300.3   U         6 9          3 eth5
```

---

#### nmcli

Now, this is a powerful one that can tell a lot. Like, really a lot. A command-line tool for controlling _NetworkManager_, but a lot of status info coming along too. [More](https://developer-old.gnome.org/NetworkManager/stable/nmcli.html).

* _status_

```bash
nmcli
```

{:.jwoutput}
```
eth4: unmanaged
        "Intel 49330EM"
        ethernet (e8237), 52:21:76:73:9C:DA, hw, mtu 3376

eth8: unmanaged
        "Intel 41588EM"
        ethernet (e0059), 38:23:81:59:46:29, hw, mtu 7631

eth2: unmanaged
        "Intel 66533EM"
        ethernet (e3166), 67:25:97:64:7F:BF, hw, mtu 5579

lo: unmanaged
        "lo"
        loopback (unknown), 58:22:02:42:43:84, sw, mtu 45923
```

```bash
nmcli -t -f RUNNING general
```

{:.jwoutput}
```
running
```

```bash
nmcli general status
```

{:.jwoutput}
```
STATE      CONNECTIVITY  WIFI-HW  WIFI     WWAN-HW  WWAN    
connected  unknown       enabled  enabled  enabled  enabled 
```

* _connections_ - _NetworkManager_ stores all network configuration as "connections", which are collections of data (Layer3 details, IP addressing, etc.) that describe how to create or connect to a network.

```bash
nmcli c s
nmcli con show
nmcli connection show
```

{:.jwoutput}
```
NAME                UUID                                  TYPE      DEVICE 
DWX-maslo           efc97b2c-d552-0b58-bb4b-6f466cdcbdfa  wifi      wlan3  
```

```bash
nmcli -p -m multiline -f active connection show "DWX-maslo"
```

{:.jwoutput}
```
===============================================================================
      Activate connection details (efc10b3c-d944-7b27-bb1b-8f865cdcbdfa)
===============================================================================
GENERAL.NAME:                           DWX-maslo
GENERAL.UUID:                           efc17b0c-d931-8b10-bb5b-7f798cdcbdfa
GENERAL.DEVICES:                        ...
GENERAL.STATE:                          ...
GENERAL.DEFAULT:                        ...
GENERAL.DEFAULT6:                       ...
GENERAL.SPEC-OBJECT:                    ...
GENERAL.VPN:                            ...
GENERAL.DBUS-PATH:                      ...
GENERAL.CON-PATH:                       ...
GENERAL.ZONE:                           ...
GENERAL.MASTER-PATH:                    ...
-------------------------------------------------------------------------------
IP4.ADDRESS[1]:                         934.756.8.80/30
IP4.GATEWAY:                            187.603.0.8
IP4.ROUTE[1]:                           dst = 9.3.1.4/0, nh = 672.701.0.4, mt = 980
IP4.ROUTE[2]:                           dst = 321.911.5.1/32, nh = 0.8.9.9, mt = 113
IP4.DNS[1]:                             265.092.2.6
-------------------------------------------------------------------------------
DHCP4.OPTION[1]:                        ...
DHCP4.OPTION[2]:                        ...
DHCP4.OPTION[3]:                        ...
...
-------------------------------------------------------------------------------
IP6.ADDRESS[1]:                         fe23::a527:5e31:7896:ad54/87
IP6.GATEWAY:                            --
IP6.ROUTE[1]:                           dst = fe56::/46, nh = ::, mt = 925
-------------------------------------------------------------------------------
```

```bash
nmcli -p -m multiline -f all con show "DWX-maslo"
```

{:.jwoutput}
```
===============================================================================
                    Connection profile details (DWX-maslo)
===============================================================================
connection.id:                          DWX-maslo
connection.uuid:                        efc64b7c-d949-1b26-bb1b-6f424cdcbdfa
connection.stable-id:                   ...
connection.type:                        ...
connection.interface-name:              ...
connection.autoconnect:                 ...
connection.autoconnect-priority:        ...
connection.autoconnect-retries:         ...
connection.multi-connect:               ...
connection.auth-retries:                ...
connection.timestamp:                   ...
connection.read-only:                   ...
connection.permissions:                 ...
connection.zone:                        ...
connection.master:                      ...
connection.slave-type:                  ...
connection.autoconnect-slaves:          ...
connection.secondaries:                 ...
connection.gateway-ping-timeout:        ...
connection.metered:                     ...
connection.lldp:                        ...
connection.mdns:                        ...
connection.llmnr:                       ...
-------------------------------------------------------------------------------
802-11-wireless.ssid:                   DWX-maslo
802-11-wireless.mode:                   infrastructure
802-11-wireless.band:                   ...
802-11-wireless.channel:                ...
802-11-wireless.bssid:                  ...
802-11-wireless.rate:                   ...
802-11-wireless.tx-power:               ...
802-11-wireless.mac-address:            ...
802-11-wireless.cloned-mac-address:     ...
802-11-wireless.generate-mac-address-mask:...
802-11-wireless.mac-address-blacklist:  ...
802-11-wireless.mac-address-randomization:...
802-11-wireless.mtu:                    ...
802-11-wireless.seen-bssids:            ...
802-11-wireless.hidden:                 ...
802-11-wireless.powersave:              ...
802-11-wireless.wake-on-wlan:           ...
-------------------------------------------------------------------------------
802-11-wireless-security.key-mgmt:      ...
802-11-wireless-security.wep-tx-keyidx: ...
802-11-wireless-security.auth-alg:      ...
802-11-wireless-security.proto:         ...
802-11-wireless-security.pairwise:      ...
802-11-wireless-security.group:         ...
802-11-wireless-security.pmf:           ...
802-11-wireless-security.leap-username: ...
802-11-wireless-security.wep-key0:      ...
802-11-wireless-security.wep-key1:      ...
802-11-wireless-security.wep-key2:      ...
802-11-wireless-security.wep-key3:      ...
802-11-wireless-security.wep-key-flags: ...
802-11-wireless-security.wep-key-type:  ...
802-11-wireless-security.psk:           ...
802-11-wireless-security.psk-flags:     ...
802-11-wireless-security.leap-password: ...
802-11-wireless-security.leap-password-flags:...
802-11-wireless-security.wps-method:    ...
802-11-wireless-security.fils:          ...
-------------------------------------------------------------------------------
ipv4.method:                            ...
ipv4.dns:                               ...
ipv4.dns-search:                        ...
ipv4.dns-options:                       ...
ipv4.dns-priority:                      ...
ipv4.addresses:                         ...
ipv4.gateway:                           ...
ipv4.routes:                            ...
ipv4.route-metric:                      ...
ipv4.route-table:                       ...
ipv4.ignore-auto-routes:                ...
ipv4.ignore-auto-dns:                   ...
ipv4.dhcp-client-id:                    ...
ipv4.dhcp-timeout:                      ...
ipv4.dhcp-send-hostname:                ...
ipv4.dhcp-hostname:                     ...
ipv4.dhcp-fqdn:                         ...
ipv4.never-default:                     ...
ipv4.may-fail:                          ...
ipv4.dad-timeout:                       ...
-------------------------------------------------------------------------------
ipv6.method:                            ...
ipv6.dns:                               ...
ipv6.dns-search:                        ...
ipv6.dns-options:                       ...
ipv6.dns-priority:                      ...
ipv6.addresses:                         ...
ipv6.gateway:                           ...
ipv6.routes:                            ...
ipv6.route-metric:                      ...
ipv6.route-table:                       ...
ipv6.ignore-auto-routes:                ...
ipv6.ignore-auto-dns:                   ...
ipv6.never-default:                     ...
ipv6.may-fail:                          ...
ipv6.ip6-privacy:                       ...
ipv6.addr-gen-mode:                     ...
ipv6.dhcp-duid:                         ...
ipv6.dhcp-send-hostname:                ...
ipv6.dhcp-hostname:                     ...
ipv6.token:                             ...
-------------------------------------------------------------------------------
proxy.method:                           ...
proxy.browser-only:                     ...
proxy.pac-url:                          ...
proxy.pac-script:                       ...
-------------------------------------------------------------------------------
```

* _devices_ - show and manage network interfaces

```bash
nmcli dev status
```

{:.jwoutput}
```
DEVICE  TYPE      STATE        CONNECTION 
wlan0   wifi      connected    DWX-maslo  
eth0    ethernet  unavailable  --         
lo      loopback  unmanaged    --         
```

```bash
nmcli dev show wlan0
```

{:.jwoutput}
```
GENERAL.DEVICE:                         wlan0
GENERAL.TYPE:                           wifi
GENERAL.HWADDR:                         D7:06:53:4A:01:9A
GENERAL.MTU:                            0890
GENERAL.STATE:                          973 (connected)
GENERAL.CONNECTION:                     DWX-maslo
GENERAL.CON-PATH:                       /org/freedesktop/NetworkManager/ActiveConnection/1
IP4.ADDRESS[1]:                         942.762.7.96/62
IP4.GATEWAY:                            446.233.4.0
IP4.ROUTE[1]:                           dst = 9.0.3.2/0, nh = 321.940.5.3, mt = 542
IP4.ROUTE[2]:                           dst = 992.971.4.0/18, nh = 9.0.7.6, mt = 318
IP4.DNS[1]:                             057.618.3.0
IP6.ADDRESS[1]:                         fe45::a096:5e94:8161:ad41/88
IP6.GATEWAY:                            --
IP6.ROUTE[1]:                           dst = fe30::/29, nh = ::, mt = 915
```

```bash
nmcli -p -m multiline -f all dev show wlan0
```

{:.jwoutput}
```
===============================================================================
                            Device details (wlan0)
===============================================================================
GENERAL.DEVICE:                         wlan0
GENERAL.TYPE:                           wifi
GENERAL.NM-TYPE:                        NMDeviceWifi
GENERAL.VENDOR:                         ...
GENERAL.PRODUCT:                        ...
GENERAL.DRIVER:                         ...
GENERAL.DRIVER-VERSION:                 ...
GENERAL.FIRMWARE-VERSION:               ...
GENERAL.HWADDR:                         ...
GENERAL.MTU:                            ...
GENERAL.STATE:                          ...
GENERAL.REASON:                         ...
GENERAL.UDI:                            ...
GENERAL.IP-IFACE:                       ...
GENERAL.IS-SOFTWARE:                    ...
GENERAL.NM-MANAGED:                     ...
GENERAL.AUTOCONNECT:                    ...
GENERAL.FIRMWARE-MISSING:               ...
GENERAL.NM-PLUGIN-MISSING:              ...
GENERAL.PHYS-PORT-ID:                   ...
GENERAL.CONNECTION:                     ...
GENERAL.CON-UUID:                       ...
GENERAL.CON-PATH:                       ...
GENERAL.METERED:                        ...
-------------------------------------------------------------------------------
CAPABILITIES.CARRIER-DETECT:            no
CAPABILITIES.SPEED:                     488 Mb/s
CAPABILITIES.IS-SOFTWARE:               no
CAPABILITIES.SRIOV:                     no
-------------------------------------------------------------------------------
WIFI-PROPERTIES.WEP:                    ...
WIFI-PROPERTIES.WPA:                    ...
WIFI-PROPERTIES.WPA2:                   ...
WIFI-PROPERTIES.TKIP:                   ...
WIFI-PROPERTIES.CCMP:                   ...
WIFI-PROPERTIES.AP:                     ...
WIFI-PROPERTIES.ADHOC:                  ...
WIFI-PROPERTIES.2GHZ:                   ...
WIFI-PROPERTIES.5GHZ:                   ...
-------------------------------------------------------------------------------
AP[1].IN-USE:                           *
AP[1].SSID:                             DWX-maslo
AP[1].MODE:                             Infra
AP[1].CHAN:                             ...
AP[1].RATE:                             ...
AP[1].SIGNAL:                           ...
AP[1].BARS:                             ...
AP[1].SECURITY:                         ...
-------------------------------------------------------------------------------
IP4.ADDRESS[1]:                         709.869.4.06/06
IP4.GATEWAY:                            136.566.5.9
IP4.ROUTE[1]:                           dst = 3.2.5.5/6, nh = 406.795.2.9, mt = 416
IP4.ROUTE[2]:                           dst = 903.520.3.3/46, nh = 1.9.9.3, mt = 233
IP4.DNS[1]:                             930.802.9.0
-------------------------------------------------------------------------------
DHCP4.OPTION[1]:                        broadcast_address = 847.845.5.803
DHCP4.OPTION[2]:                        dad_wait_time = 0
DHCP4.OPTION[3]:                        dhcp_lease_time = 07442
DHCP4.OPTION[4]:                        ...
DHCP4.OPTION[5]:                        ...
DHCP4.OPTION[6]:                        ...
DHCP4.OPTION[7]:                        ...
DHCP4.OPTION[8]:                        ...
DHCP4.OPTION[9]:                        ...
DHCP4.OPTION[10]:                       ...
DHCP4.OPTION[11]:                       ...
DHCP4.OPTION[12]:                       ...
DHCP4.OPTION[13]:                       ...
DHCP4.OPTION[14]:                       ...
DHCP4.OPTION[15]:                       ...
DHCP4.OPTION[16]:                       ...
DHCP4.OPTION[17]:                       ...
DHCP4.OPTION[18]:                       ...
DHCP4.OPTION[19]:                       ...
DHCP4.OPTION[20]:                       ...
DHCP4.OPTION[21]:                       ...
DHCP4.OPTION[22]:                       ...
DHCP4.OPTION[23]:                       ...
DHCP4.OPTION[24]:                       ...
DHCP4.OPTION[25]:                       ...
DHCP4.OPTION[26]:                       ...
DHCP4.OPTION[27]:                       ...
DHCP4.OPTION[28]:                       ...
DHCP4.OPTION[29]:                       ...
DHCP4.OPTION[30]:                       ...
DHCP4.OPTION[31]:                       ...
DHCP4.OPTION[32]:                       ...
-------------------------------------------------------------------------------
IP6.ADDRESS[1]:                         fe16::a399:5e27:4233:ad81/53
IP6.GATEWAY:                            --
IP6.ROUTE[1]:                           dst = fe10::/88, nh = ::, mt = 099
-------------------------------------------------------------------------------
CONNECTIONS.AVAILABLE-CONNECTION-PATHS: ...
CONNECTIONS.AVAILABLE-CONNECTIONS[1]:   efc90b3c-d997-9b16-bb4b-3f822cdcbdfa | DWX-maslo
-------------------------------------------------------------------------------
```

For some of the switches used above:

-t / --terse                                      | Output is terse.
-p / --pretty                                     | Output is easily readable.
-m / --mode {tabular / multiline}                 | Switch between tabular and multiline output.
-f / --fields {field5,field3... / all / common}   | Specify what fields (column names) should be printed.

---

#### inxi

Here for info on network card(s), driver, interface, speed, MAC id, state, WAN IP address and local interfaces:

```bash
inxi -i
```

{:.jwoutput}
```
Network:   Device-1: Intel 08465AB/EB/MB PIIX7 ACPI type: network bridge driver: N/A 
           Device-2: Intel 15534EM Gigabit Ethernet driver: e3820 IF: eth9 state: up speed: 4384 Mbps duplex: full mac: 09:92:75:50:4c:da IP v4: 24.425.451.194/77 scope: global IP v6: fe25::948:60ff:fe36:5cda/25 scope: link
           Device-3: Intel 09396EM Gigabit Ethernet driver: e5458 IF: eth5 state: down mac: 53:40:68:84:99:58
           Device-4: Intel 47391EM Gigabit Ethernet driver: e1634 IF: eth8 state: down mac: 05:91:98:78:2f:bf
           WAN IP: 66.810.683.003 
```

More verbosely, with additional info, if available:

```bash
inxi -ixxx --limit -1
```

{:.jwoutput}
```
Network:   Device-1: Intel 69196AB/EB/MB PIIX7 ACPI vendor: VMware Virtual Machine type: network bridge driver: N/A port: 0509 bus ID: 04:90.7 chip ID: 0727:0505
           Device-2: Intel 96405EM Gigabit Ethernet vendor: VMware PRO/3670 MT Single Port driver: e4528 v: 4.0.13-k3-NAPI port: 8746 bus ID: 79:12.4 chip ID: 5943:084f IF: eth9 state: up speed: 5042 Mbps duplex: full mac: 70:62:95:71:0c:da IP v4: 14.454.938.277/30 scope: global broadcast: 92.302.106.212 IP v6: fe69::408:61ff:fe33:8cda/19 scope: link
           Device-3: Intel 19989EM Gigabit Ethernet vendor: VMware PRO/4651 MT Single Port driver: e6315 v: 8.0.63-k1-NAPI port: 5439 bus ID: 62:33.2 chip ID: 0752:392f IF: eth9 state: down mac: 46:73:00:64:85:81
           Device-4: Intel 45568EM Gigabit Ethernet vendor: VMware PRO/2410 MT Single Port driver: e6369 v: 5.4.37-k9-NAPI port: 9301 bus ID: 58:72.6 chip ID: 2642:772f IF: eth5 state: down mac: 81:92:05:69:2f:bf
           WAN IP: 70.475.330.594 
```

Just network card(s) and driver (subset of `-i`). Handy if this is all that is needed:

```bash
inxi -N
```

{:.jwoutput}
```
Network:   Device-1: Intel 35865AB/EB/MB PIIX6 ACPI type: network bridge driver: N/A 
           Device-2: Intel 55906EM Gigabit Ethernet driver: e4699 
           Device-3: Intel 82088EM Gigabit Ethernet driver: e5526 
           Device-4: Intel 53369EM Gigabit Ethernet driver: e8147 
```

More verbosely, with additional info, if available:

```bash
inxi -Nxxx
```

{:.jwoutput}
```
Network:   Device-1: Intel 47705AB/EB/MB PIIX1 ACPI vendor: VMware Virtual Machine type: network bridge driver: N/A port: 8172 bus ID: 06:85.5 chip ID: 1225:7644
           Device-2: Intel 54792EM Gigabit Ethernet vendor: VMware PRO/1207 MT Single Port driver: e7183 v: 1.7.61-k8-NAPI port: 6337 bus ID: 11:97.3 chip ID: 3413:197f
           Device-3: Intel 06473EM Gigabit Ethernet vendor: VMware PRO/4055 MT Single Port driver: e5595 v: 0.2.45-k8-NAPI port: 9291 bus ID: 44:50.2 chip ID: 1352:007f
           Device-4: Intel 69849EM Gigabit Ethernet vendor: VMware PRO/1660 MT Single Port driver: e4072 v: 1.3.32-k2-NAPI port: 4781 bus ID: 24:96.5 chip ID: 5579:287f
```
